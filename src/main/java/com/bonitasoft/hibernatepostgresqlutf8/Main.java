package com.bonitasoft.hibernatepostgresqlutf8;

import java.text.MessageFormat;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Main {
    public static void main(String[] args) {
    	Configuration c = new Configuration();
    	c.setProperty("hibernate.connection.username", "bonita" );
    	c.setProperty("hibernate.connection.password", "bonita" );
    	c.setProperty("hibernate.connection.driver_class", "org.postgresql.Driver");
    	c.setProperty("hibernate.connection.url", "jdbc:postgresql:test_utf8_locale_fr");
    	//c.setProperty("hibernate.hbm2ddl.auto", "validate");
    	c.setProperty("hibernate.hbm2ddl.auto", "update");
    	//org.hibernate.dialect.PostgreSQL9Dialect
    	c.setProperty("hibernate.dialect", "org.hibernate.dialect.PostgreSQLDialect");
    	
    	c.addAnnotatedClass(MyBusinessObject.class);
    	
        final StandardServiceRegistryBuilder builder = new StandardServiceRegistryBuilder().applySettings(c.getProperties());
        final SessionFactory factory = c.buildSessionFactory(builder.build());
        final Session session = factory.openSession();
        
        final MyBusinessObject myBusinessObject = new MyBusinessObject();
        myBusinessObject.setaShortString("test");
        myBusinessObject.setaBigString("veryLongTest voilà quelques caractères avec des accents€");
        
        session.beginTransaction();
        session.save(myBusinessObject);
        session.getTransaction().commit();
        

            final MyBusinessObject myBusinessObject2 = new MyBusinessObject();
            myBusinessObject2.setaShortString("test 2");
            myBusinessObject2.setaBigString("le deuxième veryLongTest voilà quelques caractères avec des accents€");
            
            session.beginTransaction();
            session.save(myBusinessObject2);
            session.getTransaction().commit();

        

		final List<MyBusinessObject> businessObjects = session.createCriteria(MyBusinessObject.class).list();
        
        System.out.println("\n----\n");
        System.out.println(MessageFormat.format("Storing {0} business object in the database", businessObjects.size()));
        for (final MyBusinessObject b : businessObjects) {
            System.out.println(b.getaBigString());
        }
        System.out.println("\n----\n");
        session.close();
        factory.close();
	}
}
